<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Key Results on boblbobl</title><link>https://boblbobl.com/tags/key-results/</link><description>Recent content in Key Results on boblbobl</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 28 Sep 2020 09:48:26 +0100</lastBuildDate><atom:link href="https://boblbobl.com/tags/key-results/index.xml" rel="self" type="application/rss+xml"/><item><title>Making OKR Work for Small Development Teams</title><link>https://boblbobl.com/2020/09/28/making-okr-work-for-small-development-teams/</link><pubDate>Mon, 28 Sep 2020 09:48:26 +0100</pubDate><guid>https://boblbobl.com/2020/09/28/making-okr-work-for-small-development-teams/</guid><description>&lt;p>A current trend in our industry is to formulate your goals as Objectives and Key Results (or OKR). However, there are a few challenges when implementing OKR, especially on a team level.&lt;/p>
&lt;p>This post is an overview of how we use (or misuse) OKR on a small development team.&lt;/p>
&lt;p>To give you a little context, our team consists of 3 developers and a product owner (that is I). We have a daily stand-up every day at noon and do refinement session once a week. Everyone (including myself) are attending all team meetings (including retrospectives). We use a Kanban board to support the prioritization of work and tracking progress. We do not use sprints or commit to work that we need to deliver within a specific deadline; instead, we communicate expected delivery dates based on our lead time.&lt;/p></description></item></channel></rss>